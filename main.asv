clc
close all
clear

% Read image
% image = imread('Images_Training\jaaaasmin.png');
image = imread('Images_Training\im5s.jpg');

BW = makeImageBinary(image);
[H, theta, rho, P, lines] = houghFunction(BW, image);

% Calculate the angle for which the image is originally rotated by
rotatedImage = rotateImage(image, P, theta);
figure
imshow(rotatedImage)

BW = makeImageBinary(rotatedImage);
figure
imshow(BW)
%%
bw = BW;
verticalProfile = sum(bw, 2);
horizontalProfile = sum(bw, 1);
figure; 
barh(verticalProfile);
% [rows, columns] = size(BW);
% plot(sum(BW, 1), 1:size(BW(1,:)), 'b-');
maxy = max(verticalProfile);
miny = min(verticalProfile);
%removedBW = lineRemoval(rotatedImage);


small = 1;
order = 1;
begin = zeros(size(verticalProfile));
ending = zeros(size(verticalProfile));

for i = 1:size(verticalProfile)
    
    if (small == 1)
        if (verticalProfile(i) < miny*2)
            small = 0;
            begin(order) = i;
        end
    else
        if (verticalProfile(i) > maxy/2)
            small = 1;
            ending(order) = i;
            order = order + 1;
        end
    end
    
end
%%
figure

%figure
%imshow(BW(begin(1):(begin(2)), :))

for i = 1:order-2
    subImg = BW(begin(i):begin(i+1), :);
    vertProf = sum(subImg, 2);
    findpeaks(vertProf);
    [subPks, subLocs] = findpeaks(vertProf);
    [A, ind] = maxk(subPks, 5);
    linPos(:,i) = subLocs(ind);
end


%figure
%imshow(removedBW)

%Identifiera linjer
%Rotera bilder

%Gör bilden binary med thresholding

%Gör Morphological operations för att ta bort hål/linjer



